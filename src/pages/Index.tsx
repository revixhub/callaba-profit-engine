
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Separator } from "@/components/ui/separator";
import { ArrowUp, CheckCircle, TrendingUp, BarChart3, Users, Target, DollarSign, Shield, Clock, Zap, Menu, X } from "lucide-react";
import { useState } from "react";

const Index = () => {
  const [formData, setFormData] = useState({
    name: "",
    phone: ""
  });
  const [isMenuOpen, setIsMenuOpen] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    console.log("Form submitted:", formData);
    
    try {
      const response = await fetch('/api/send-audit-request', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          ...formData,
          email: 'info@callaba.agency'
        }),
      });
      
      if (response.ok) {
        alert('–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
        setFormData({ name: "", phone: "" });
      }
    } catch (error) {
      console.error('Error sending form:', error);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.');
    }
  };

  const scrollToSection = (sectionId: string) => {
    document.getElementById(sectionId)?.scrollIntoView({ behavior: "smooth" });
    setIsMenuOpen(false);
  };

  return (
    <div className="min-h-screen bg-black text-white font-sans">
      {/* Header */}
      <header className="fixed top-0 w-full bg-black/80 backdrop-blur-xl border-b border-gray-800 z-50">
        <div className="max-w-7xl mx-auto px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <div className="text-xl font-medium text-white">scale</div>
            
            {/* Desktop Navigation */}
            <nav className="hidden lg:flex items-center space-x-8">
              <button onClick={() => scrollToSection("hero")} className="text-gray-300 hover:text-white transition-colors text-sm">–ì–ª–∞–≤–Ω–∞—è</button>
              <button onClick={() => scrollToSection("cases")} className="text-gray-300 hover:text-white transition-colors text-sm">–ö–µ–π—Å—ã</button>
              <button onClick={() => scrollToSection("pricing")} className="text-gray-300 hover:text-white transition-colors text-sm">–¢–∞—Ä–∏—Ñ—ã</button>
              <button onClick={() => scrollToSection("faq")} className="text-gray-300 hover:text-white transition-colors text-sm">FAQ</button>
              <button onClick={() => scrollToSection("audit")} className="text-gray-300 hover:text-white transition-colors text-sm">–ê—É–¥–∏—Ç</button>
            </nav>
            
            <div className="flex items-center space-x-4">
              <Button onClick={() => scrollToSection("audit")} className="hidden lg:inline-flex bg-white hover:bg-gray-100 text-black px-4 py-2 text-sm font-medium rounded-md">
                Book a Demo ‚Üí
              </Button>
              <button className="hidden lg:inline-flex text-gray-300 hover:text-white text-sm">Log In</button>
              
              {/* Mobile menu button */}
              <button
                onClick={() => setIsMenuOpen(!isMenuOpen)}
                className="lg:hidden p-2 rounded-md text-gray-300 hover:text-white"
              >
                {isMenuOpen ? <X className="h-6 w-6" /> : <Menu className="h-6 w-6" />}
              </button>
            </div>
          </div>
          
          {/* Mobile Navigation */}
          {isMenuOpen && (
            <div className="lg:hidden border-t border-gray-800 py-4">
              <nav className="flex flex-col space-y-4">
                <button onClick={() => scrollToSection("hero")} className="text-gray-300 hover:text-white transition-colors text-left">–ì–ª–∞–≤–Ω–∞—è</button>
                <button onClick={() => scrollToSection("cases")} className="text-gray-300 hover:text-white transition-colors text-left">–ö–µ–π—Å—ã</button>
                <button onClick={() => scrollToSection("pricing")} className="text-gray-300 hover:text-white transition-colors text-left">–¢–∞—Ä–∏—Ñ—ã</button>
                <button onClick={() => scrollToSection("faq")} className="text-gray-300 hover:text-white transition-colors text-left">FAQ</button>
                <button onClick={() => scrollToSection("audit")} className="text-gray-300 hover:text-white transition-colors text-left">–ê—É–¥–∏—Ç</button>
                <Button onClick={() => scrollToSection("audit")} className="bg-white hover:bg-gray-100 text-black w-full mt-4 rounded-md">
                  Book a Demo ‚Üí
                </Button>
              </nav>
            </div>
          )}
        </div>
      </header>

      {/* Hero Section */}
      <section id="hero" className="pt-16 min-h-screen flex items-center bg-black relative overflow-hidden">
        {/* Gradient orbs background */}
        <div className="absolute inset-0">
          <div className="absolute top-1/4 left-1/4 w-96 h-96 bg-gradient-to-r from-purple-500/20 to-blue-500/20 rounded-full blur-3xl"></div>
          <div className="absolute bottom-1/4 right-1/4 w-96 h-96 bg-gradient-to-r from-pink-500/20 to-yellow-500/20 rounded-full blur-3xl"></div>
        </div>
        
        <div className="max-w-7xl mx-auto px-6 lg:px-8 py-20 relative">
          <div className="text-center">
            <h1 className="text-5xl md:text-6xl lg:text-7xl font-light text-white mb-8 leading-tight">
              –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø—Ä–∏–±—ã–ª—å<br />
              <span className="bg-gradient-to-r from-blue-400 via-purple-400 to-pink-400 bg-clip-text text-transparent">
                –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö
              </span><br />
              –≤ 3-10 —Ä–∞–∑
            </h1>
            <p className="text-xl text-gray-300 mb-12 leading-relaxed max-w-4xl mx-auto">
              –ú—ã –Ω–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ. –ú—ã ‚Äî –≤–∞—à –≤–Ω–µ—à–Ω–∏–π –æ—Ç–¥–µ–ª –ø–æ –ø–æ–≤—ã—à–µ–Ω–∏—é –ø—Ä–æ–¥–∞–∂ –Ω–∞ WB –∏ Ozon. 
              –°–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–¥—Ö–æ–¥, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
            </p>
            
            <div className="flex flex-col sm:flex-row gap-4 justify-center items-center mb-16">
              <Button onClick={() => scrollToSection("audit")} className="bg-white hover:bg-gray-100 text-black px-8 py-3 text-base font-medium rounded-md">
                Book a Demo ‚Üí
              </Button>
              <Button variant="outline" className="border-gray-600 text-white hover:bg-gray-800 px-8 py-3 text-base font-medium rounded-md">
                Build AI ‚Üí
              </Button>
            </div>

            {/* Logo strip */}
            <div className="border-t border-gray-800 pt-12">
              <p className="text-gray-400 text-sm mb-8 uppercase tracking-wider">Scale works with Generative AI Companies, U.S. Government Agencies & Enterprises</p>
              <div className="flex justify-center items-center space-x-12 opacity-60">
                {/* Placeholder for client logos */}
                <div className="w-16 h-8 bg-gray-700 rounded"></div>
                <div className="w-16 h-8 bg-gray-700 rounded"></div>
                <div className="w-16 h-8 bg-gray-700 rounded"></div>
                <div className="w-16 h-8 bg-gray-700 rounded"></div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Research Section */}
      <section className="py-32 bg-black">
        <div className="max-w-7xl mx-auto px-6 lg:px-8">
          <div className="text-center mb-20">
            <h2 className="text-4xl md:text-5xl font-light text-white mb-6">Frontier AI Research</h2>
            <p className="text-xl text-gray-300 max-w-4xl mx-auto leading-relaxed mb-12">
              SEAL (Safety, Evaluations, and Alignment Lab) is our research initiative to improve model capabilities through challenging private evaluations and novel research.
            </p>
            <Button className="bg-gray-800 hover:bg-gray-700 text-white px-6 py-3 rounded-md border border-gray-700">
              Learn More ‚Üí
            </Button>
          </div>

          {/* Cards Grid */}
          <div className="grid md:grid-cols-3 gap-6">
            {[
              {
                category: "Leaderboards",
                title: "SEAL Leaderboards: Expert-Driven Private Evaluations",
                icon: "üéØ"
              },
              {
                category: "Research", 
                title: "LLMs Easily Jailbroken as Browser Agents",
                icon: "‚ùå"
              },
              {
                category: "Research",
                title: "Multi-Turn Human Jailbreaks on LLM Defenses", 
                icon: "üîí"
              }
            ].map((item, index) => (
              <Card key={index} className="bg-gray-900 border-gray-800 hover:bg-gray-800 transition-colors">
                <CardContent className="p-8">
                  <div className="text-3xl mb-6">{item.icon}</div>
                  <div className="text-gray-400 text-sm uppercase tracking-wider mb-3">{item.category}</div>
                  <h3 className="text-white text-xl font-medium leading-tight">{item.title}</h3>
                  <div className="mt-6">
                    <button className="text-gray-400 hover:text-white">
                      <ArrowUp className="h-4 w-4 rotate-45" />
                    </button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* AI for Enterprise Section */}
      <section className="py-32 bg-black">
        <div className="max-w-7xl mx-auto px-6 lg:px-8">
          <div className="text-center mb-20">
            <div className="text-gray-400 text-sm uppercase tracking-wider mb-6">AI FOR THE ENTERPRISE</div>
            <h2 className="text-4xl md:text-5xl font-light text-white mb-8">Generative AI Architecture</h2>
            <p className="text-xl text-gray-300 max-w-4xl mx-auto leading-relaxed mb-12">
              Whether you're building your own models or applying foundation models to your business, data remains the biggest bottleneck to AI.
            </p>
            <Button className="bg-gray-800 hover:bg-gray-700 text-white px-6 py-3 rounded-md border border-gray-700">
              Book a Demo ‚Üí
            </Button>
          </div>
        </div>
      </section>

      {/* Pain Points */}
      <section className="py-24 bg-gray-950">
        <div className="max-w-7xl mx-auto px-6 lg:px-8">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-light text-white mb-4">–í–∞–º —ç—Ç–æ –∑–Ω–∞–∫–æ–º–æ?</h2>
            <p className="text-xl text-gray-400 max-w-3xl mx-auto">–ü—Ä–æ–±–ª–µ–º—ã, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Å—Ç–∞–ª–∫–∏–≤–∞—é—Ç—Å—è –≤–ª–∞–¥–µ–ª—å—Ü—ã –±–∏–∑–Ω–µ—Å–∞ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö</p>
          </div>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {[
              { icon: DollarSign, text: "–†–µ–∫–ª–∞–º–∞ —Å–∂–∏—Ä–∞–µ—Ç –≤—Å—é –º–∞—Ä–∂—É", color: "text-red-400" },
              { icon: TrendingUp, text: "–í–æ–∑–≤—Ä–∞—Ç—ã —Ä–∞—Å—Ç—É—Ç, –∞ –ø—Ä–∏–±—ã–ª—å ‚Äî –Ω–µ—Ç", color: "text-orange-400" },
              { icon: BarChart3, text: "80% –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞ ‚Äî –º–µ—Ä—Ç–≤—ã–π –≥—Ä—É–∑", color: "text-yellow-400" },
              { icon: Shield, text: "–ù–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª—è –∑–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏", color: "text-blue-400" },
              { icon: Clock, text: "–†—É—á–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –º–µ—à–∞–µ—Ç —Ä–æ—Å—Ç—É", color: "text-purple-400" }
            ].map((item, index) => (
              <Card key={index} className="bg-gray-900 border-gray-800 hover:bg-gray-800 transition-colors">
                <CardContent className="p-8 text-center">
                  <div className="mb-6">
                    <item.icon className={`h-8 w-8 ${item.color} mx-auto`} />
                  </div>
                  <p className="text-white font-medium text-lg leading-relaxed">{item.text}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* What We Do */}
      <section className="py-32 bg-black">
        <div className="max-w-7xl mx-auto px-6 lg:px-8">
          <div className="text-center mb-20">
            <h2 className="text-4xl md:text-5xl font-light text-white mb-8 max-w-5xl mx-auto leading-tight">
              –ú—ã –Ω–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ.<br />
              –ú—ã ‚Äî –≤–∞—à –≤–Ω–µ—à–Ω–∏–π –æ—Ç–¥–µ–ª –ø–æ –ø–æ–≤—ã—à–µ–Ω–∏—é –ø—Ä–æ–¥–∞–∂ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö
            </h2>
            <p className="text-xl text-gray-400 mb-8">
              (WB, Ozon)
            </p>
          </div>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {[
              { icon: Target, title: "–°—Ç—Ä–∞—Ç–µ–≥–∏—è 6‚Äì12 –º–µ—Å—è—Ü–µ–≤", description: "–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–æ—Å—Ç–∞ —Å —á–µ—Ç–∫–∏–º–∏ KPI" },
              { icon: Zap, title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –¥–æ 80% —Ä—É—Ç–∏–Ω—ã", description: "–û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏—Ö —Ä–µ—à–µ–Ω–∏–π" },
              { icon: BarChart3, title: "BI-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏", description: "–ü—Ä–∏–Ω–∏–º–∞–π—Ç–µ —Ä–µ—à–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö" },
              { icon: Users, title: "–í—Å—è –∫–æ–º–∞–Ω–¥–∞ ‚Äî –≤ –æ–¥–Ω–æ–π —Å–≤—è–∑–∫–µ", description: "–ö–æ–æ—Ä–¥–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ —Ä–∞–∑–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è" },
              { icon: CheckCircle, title: "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å ‚Äî –∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç", description: "–ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ü–µ–ª–µ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π" }
            ].map((item, index) => (
              <Card key={index} className="bg-gray-900 border-gray-800 hover:bg-gray-800 transition-colors">
                <CardContent className="p-8">
                  <div className="mb-6">
                    <item.icon className="h-6 w-6 text-blue-400" />
                  </div>
                  <h3 className="text-xl font-medium text-white mb-4 leading-tight">{item.title}</h3>
                  <p className="text-gray-400 leading-relaxed">{item.description}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Cases */}
      <section id="cases" className="py-32 bg-gray-950">
        <div className="max-w-7xl mx-auto px-6 lg:px-8">
          <div className="text-center mb-20">
            <h2 className="text-4xl md:text-5xl font-light text-white mb-6">
              –†–æ—Å—Ç –ø—Ä–∏–±—ã–ª–∏ —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–¥—Ö–æ–¥
            </h2>
            <p className="text-xl text-gray-400">–†–µ–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤</p>
          </div>
          
          {/* Graphics Slots */}
          <div className="mb-16">
            <div className="bg-gray-900 rounded-xl p-12 border border-gray-800">
              <div className="grid md:grid-cols-3 gap-8">
                {[1, 2, 3].map((i) => (
                  <div key={i} className="bg-gray-800 rounded-lg h-64 flex items-center justify-center border border-gray-700">
                    <div className="text-center text-gray-500">
                      <Target className="h-12 w-12 mx-auto mb-3 text-gray-600" />
                      <p className="text-sm font-medium text-gray-400">–°–∫—Ä–∏–Ω—à–æ—Ç –∫–µ–π—Å–∞ {i}</p>
                      <p className="text-xs text-gray-500 mt-1">–î–æ/–ü–æ—Å–ª–µ</p>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
          
          <div className="grid md:grid-cols-3 gap-8">
            {[
              {
                category: "–ë–ê–î—ã (Ozon)",
                before: "200–ö ‚ÇΩ",
                after: "6–ú ‚ÇΩ",
                metric: "–î–†–†: 25% ‚Üí 3%",
                growth: "x30"
              },
              {
                category: "–ù–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã (WB)",
                before: "200–ö ‚ÇΩ",
                after: "6–ú ‚ÇΩ",
                metric: "–†–æ—Å—Ç –æ—Ä–≥–∞–Ω–∏–∫–∏ –≤ 15 —Ä–∞–∑",
                growth: "x30"
              },
              {
                category: "–ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è (WB)",
                before: "500–ö ‚ÇΩ",
                after: "5–ú ‚ÇΩ",
                metric: "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è SKU -70%",
                growth: "x10"
              }
            ].map((item, index) => (
              <Card key={index} className="bg-gray-900 border-gray-800 hover:bg-gray-800 transition-colors">
                <CardContent className="p-8">
                  <div className="mb-6">
                    <span className="inline-block px-3 py-1 bg-blue-500/20 text-blue-400 text-sm font-medium rounded-full">
                      {item.growth}
                    </span>
                  </div>
                  <h3 className="text-xl font-medium text-white mb-8">{item.category}</h3>
                  <div className="space-y-4">
                    <div className="flex justify-between items-center">
                      <span className="text-gray-400 font-medium">–ë—ã–ª–æ:</span>
                      <span className="text-gray-300 font-semibold">{item.before}</span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-gray-400 font-medium">–°—Ç–∞–ª–æ:</span>
                      <span className="text-green-400 font-bold text-xl">{item.after}</span>
                    </div>
                    <Separator className="my-4 bg-gray-700" />
                    <p className="text-blue-400 font-medium text-center bg-blue-500/10 py-3 px-4 rounded-lg border border-blue-500/20">{item.metric}</p>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Pricing */}
      <section id="pricing" className="py-32 bg-black">
        <div className="max-w-7xl mx-auto px-6 lg:px-8">
          <div className="text-center mb-20">
            <h2 className="text-4xl md:text-5xl font-light text-white mb-6">
              –ü–æ–¥ –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –∑—Ä–µ–ª–æ—Å—Ç–∏
            </h2>
            <p className="text-xl text-gray-400">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—Ö–æ–¥–∏—Ç –≤–∞—à–µ–º—É –±–∏–∑–Ω–µ—Å—É</p>
          </div>
          <div className="grid md:grid-cols-3 gap-8">
            {[
              {
                name: "–ë–ê–ó–ê",
                price: "–æ—Ç 50 000‚ÇΩ",
                features: ["–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á—ë—Ç—ã", "–ë–∞–∑–æ–≤–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è", "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ 2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é", "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–∫–ª–∞–º—ã"],
                recommended: false
              },
              {
                name: "–ü–†–û–†–´–í",
                price: "–æ—Ç 100 000‚ÇΩ",
                features: ["–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥", "IT —Ä–µ—à–µ–Ω–∏—è –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è", "–§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ö–æ–º–∞–Ω–¥–∞ –∏–∑ 4 —ç–∫—Å–ø–µ—Ä—Ç–æ–≤", "–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ —Å–æ–∑–≤–æ–Ω—ã"],
                recommended: true
              },
              {
                name: "–ú–ê–°–®–¢–ê–ë",
                price: "–æ—Ç 200 000‚ÇΩ",
                features: ["BI –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏", "6 —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –≤ –∫–æ–º–∞–Ω–¥–µ", "–ü–æ–ª–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ", "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä", "–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å–≤—è–∑—å"]
              }
            ].map((plan, index) => (
              <Card key={index} className={`relative ${plan.recommended ? 'bg-gray-800 border-blue-500' : 'bg-gray-900 border-gray-800'} hover:bg-gray-800 transition-colors`}>
                <CardContent className="p-10">
                  {plan.recommended && (
                    <div className="absolute -top-3 left-1/2 transform -translate-x-1/2">
                      <span className="bg-blue-600 text-white text-sm font-medium px-4 py-1 rounded-full">
                        –ü–æ–ø—É–ª—è—Ä–Ω—ã–π
                      </span>
                    </div>
                  )}
                  <div className="text-center mb-8">
                    <h3 className="text-2xl font-medium text-white mb-2">{plan.name}</h3>
                    <p className="text-4xl font-light text-white mb-1">{plan.price}</p>
                    <p className="text-gray-400">–≤ –º–µ—Å—è—Ü</p>
                  </div>
                  <ul className="space-y-4 mb-8">
                    {plan.features.map((feature, idx) => (
                      <li key={idx} className="flex items-start">
                        <CheckCircle className="h-5 w-5 text-green-400 mr-3 mt-0.5 flex-shrink-0" />
                        <span className="text-gray-300 leading-relaxed">{feature}</span>
                      </li>
                    ))}
                  </ul>
                  <Button className={`w-full py-3 rounded-md ${plan.recommended ? 'bg-blue-600 hover:bg-blue-700 text-white' : 'bg-gray-800 hover:bg-gray-700 text-white border border-gray-700'} font-medium`}>
                    –í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
          <p className="text-center text-gray-400 mt-16 text-lg font-light italic">
            –ö–æ–º–∞–Ω–¥–∞ —Å–∏–ª—å–Ω–µ–µ –æ–¥–Ω–æ–≥–æ e-com –º–µ–Ω–µ–¥–∂–µ—Ä–∞.
          </p>
        </div>
      </section>

      {/* FAQ */}
      <section id="faq" className="py-32 bg-gray-950">
        <div className="max-w-4xl mx-auto px-6 lg:px-8">
          <div className="text-center mb-20">
            <h2 className="text-4xl md:text-5xl font-light text-white mb-6">
              –ß–∞—Å—Ç–æ —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç
            </h2>
            <p className="text-xl text-gray-400">–û—Ç–≤–µ—Ç—ã –Ω–∞ —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã</p>
          </div>
          <div className="space-y-6">
            {[
              {
                question: "–ê –≥–¥–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏?",
                answer: "–ü–∏–ª–æ—Ç + KPI. –û–ø–ª–∞—Ç–∞ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –ø–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–µ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π. –ü–µ—Ä–≤—ã–π –º–µ—Å—è—Ü —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫ –ø–æ–ª—É—á–∞–µ–º –æ–ø–ª–∞—Ç—É."
              },
              {
                question: "–ù–∞–º –¥–æ—Ä–æ–≥–æ",
                answer: "–ú—ã –∑–∞–º–µ–Ω—è–µ–º —Ü–µ–ª—ã–π –æ—Ç–¥–µ–ª. –°—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —á–∞—Å—Ç–æ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –Ω–∞—à–∏ —Ç–∞—Ä–∏—Ñ—ã, –∞ –º—ã –¥–∞—ë–º –∫–æ–º–∞–Ω–¥—É —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ —Å –æ–ø—ã—Ç–æ–º –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏. –≠–∫–æ–Ω–æ–º–∏—è –Ω–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞—Ö, –Ω–∞–ª–æ–≥–∞—Ö –∏ –æ–±—É—á–µ–Ω–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞."
              },
              {
                question: "–£ –Ω–∞—Å —É–∑–∫–∞—è –Ω–∏—à–∞",
                answer: "–ï—Å—Ç—å –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –≤ 14 –æ—Ç—Ä–∞—Å–ª—è—Ö. –°–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–¥—Ö–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –ª—é–±–æ–π –Ω–∏—à–µ ‚Äî –æ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –¥–æ–º–∞ –¥–æ –≤—ã—Å–æ–∫–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏. –ü—Ä–∏–Ω—Ü–∏–ø—ã —Ä–æ—Å—Ç–∞ –ø—Ä–æ–¥–∞–∂ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã."
              }
            ].map((item, index) => (
              <Card key={index} className="bg-gray-900 border-gray-800 hover:bg-gray-800 transition-colors">
                <CardContent className="p-8">
                  <h3 className="text-xl font-medium text-white mb-4">{item.question}</h3>
                  <p className="text-gray-300 leading-relaxed text-lg font-light">{item.answer}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* CTA / Lead Form */}
      <section id="audit" className="py-32 bg-black">
        <div className="max-w-4xl mx-auto px-6 lg:px-8 text-center">
          <h2 className="text-4xl md:text-5xl font-light text-white mb-8">
            –ü–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∞—É–¥–∏—Ç
          </h2>
          <p className="text-xl text-gray-300 mb-16 leading-relaxed">
            30 –º–∏–Ω—É—Ç. –ê–Ω–∞–ª–∏–∑ —Ç–æ—á–µ–∫ —Ä–æ—Å—Ç–∞. –ü—Ä–æ–≥–Ω–æ–∑ –ø—Ä–∏–±—ã–ª–∏.<br />
            –ü–æ–∫–∞–∂–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —à–∞–≥–∏ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂.
          </p>
          
          {/* Graphics Slot */}
          <div className="mb-16">
            <div className="bg-gray-900 rounded-xl p-12 border border-gray-800">
              <div className="text-center text-gray-500">
                <TrendingUp className="h-16 w-16 mx-auto mb-4 text-gray-600" />
                <p className="text-sm font-medium text-gray-400">–ú–µ—Å—Ç–æ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ –∞—É–¥–∏—Ç–∞</p>
                <p className="text-xs text-gray-500 mt-1">–°–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç—á—ë—Ç–∞, –¥–∏–∞–≥—Ä–∞–º–º—ã</p>
              </div>
            </div>
          </div>
          
          <Card className="max-w-md mx-auto bg-gray-900 border-gray-800">
            <CardContent className="p-8">
              <form onSubmit={handleSubmit} className="space-y-6">
                <div className="text-left">
                  <Label htmlFor="name" className="text-gray-300 font-medium">–ò–º—è</Label>
                  <Input
                    id="name"
                    value={formData.name}
                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}
                    placeholder="–í–∞—à–µ –∏–º—è"
                    required
                    className="mt-2 bg-gray-800 border-gray-700 text-white placeholder-gray-500 focus:ring-blue-500 focus:border-blue-500"
                  />
                </div>
                <div className="text-left">
                  <Label htmlFor="phone" className="text-gray-300 font-medium">–¢–µ–ª–µ—Ñ–æ–Ω</Label>
                  <Input
                    id="phone"
                    type="tel"
                    value={formData.phone}
                    onChange={(e) => setFormData({ ...formData, phone: e.target.value })}
                    placeholder="+7 (999) 999-99-99"
                    required
                    className="mt-2 bg-gray-800 border-gray-700 text-white placeholder-gray-500 focus:ring-blue-500 focus:border-blue-500"
                  />
                </div>
                <Button type="submit" className="w-full bg-white hover:bg-gray-100 text-black py-3 font-medium rounded-md">
                  –ü–æ–ª—É—á–∏—Ç—å –∞—É–¥–∏—Ç
                </Button>
                <p className="text-xs text-gray-500 text-center leading-relaxed">
                  –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                </p>
              </form>
            </CardContent>
          </Card>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-black border-t border-gray-800 py-20">
        <div className="max-w-7xl mx-auto px-6 lg:px-8">
          <div className="grid md:grid-cols-5 gap-8">
            <div className="md:col-span-1">
              <div className="text-xl font-medium text-white mb-6">Callaba</div>
              <p className="text-gray-400 leading-relaxed text-sm">
                –í–∞—à –≤–Ω–µ—à–Ω–∏–π –æ—Ç–¥–µ–ª –ø–æ –ø–æ–≤—ã—à–µ–Ω–∏—é –ø—Ä–æ–¥–∞–∂ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö
              </p>
            </div>
            
            <div>
              <h3 className="text-sm font-medium text-gray-300 mb-4 uppercase tracking-wider">PRODUCTS</h3>
              <ul className="space-y-3 text-gray-500 text-sm">
                <li><button onClick={() => scrollToSection("hero")} className="hover:text-gray-300 transition-colors">Scale Data Engine</button></li>
                <li><button onClick={() => scrollToSection("cases")} className="hover:text-gray-300 transition-colors">Scale GenAI Platform</button></li>
                <li><button onClick={() => scrollToSection("pricing")} className="hover:text-gray-300 transition-colors">Scale Donovan</button></li>
              </ul>
            </div>
            
            <div>
              <h3 className="text-sm font-medium text-gray-300 mb-4 uppercase tracking-wider">COMPANY</h3>
              <ul className="space-y-3 text-gray-500 text-sm">
                <li><button className="hover:text-gray-300 transition-colors">About</button></li>
                <li><button className="hover:text-gray-300 transition-colors">Careers</button></li>
                <li><button className="hover:text-gray-300 transition-colors">Security</button></li>
                <li><button className="hover:text-gray-300 transition-colors">Terms</button></li>
                <li><button className="hover:text-gray-300 transition-colors">Privacy</button></li>
              </ul>
            </div>
            
            <div>
              <h3 className="text-sm font-medium text-gray-300 mb-4 uppercase tracking-wider">RESOURCES</h3>
              <ul className="space-y-3 text-gray-500 text-sm">
                <li><button className="hover:text-gray-300 transition-colors">Blog</button></li>
                <li><button className="hover:text-gray-300 transition-colors">Contact Us</button></li>
                <li><button className="hover:text-gray-300 transition-colors">Documentation</button></li>
                <li><button className="hover:text-gray-300 transition-colors">Community</button></li>
              </ul>
            </div>
            
            <div>
              <h3 className="text-sm font-medium text-gray-300 mb-4 uppercase tracking-wider">FOLLOW US</h3>
              <div className="text-gray-500 text-sm">
                <p>–¢–µ–ª–µ—Ñ–æ–Ω: +7 (987) 455-64-71</p>
                <p>Email: info@callaba.agency</p>
              </div>
            </div>
          </div>
          
          <Separator className="my-12 bg-gray-800" />
          
          <div className="flex flex-col md:flex-row justify-between items-center">
            <p className="text-gray-500 text-sm">Copyright ¬© 2025 Scale AI, Inc. All rights reserved.</p>
            <p className="text-gray-600 text-sm mt-4 md:mt-0">
              Terms of Use & Privacy Policy
            </p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Index;
